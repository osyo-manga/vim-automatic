*automatic.txt*		自動的にウィンドウの設定を行う

==============================================================================
目次						*automatic-contents*

概要				|automatic-introduction|
使い方				|automatic-usage|
設定				|automatic-setting|
  変数				  |automatic-variables|
  マッチ			  |automatic-config-match|
  セット			  |automatic-config-set|


==============================================================================
概要						*automatic-introduction*

|automatic| は任意のタイミングでウィンドウに対する設定を行うプラグインです。



==============================================================================
使い方						*automatic-usage*

|g:automatic_config| に設定を記述して使用します。
設定方法は |automatic-config| を参照してください。


==============================================================================
設定						*automatic-setting*

------------------------------------------------------------------------------
変数						*automatic-variables*

g:automatic_config				*g:automatic_config*
	"match" と "set" のキーを保持した辞書のリストになります。
	マッチング方法やウィンドウに対する設定をこの変数に記述して使用します。

g:automatic_default_match_config		*g:automatic_default_match_config*
	|g:automatic_config| に設定する "match" のデフォルト値です。
	|automatic-config-match| の値を保持した辞書です。
	|g:automatic_default_match_config| よりも |g:automatic_config| の値が
	優先して使用されます。

g:automatic_default_set_config			*g:automatic_default_set_config*
	|g:automatic_config| に設定する "set" のデフォルト値です。
	|automatic-config-set| の値を保持した辞書です。
	|g:automatic_default_set_config| よりも |g:automatic_config| の値が
	優先して使用されます。


=============================================================================
設定方法					*automatic-config*

|g:automatic_config| に "match" と "set" をキーを持つ辞書のリストを設定して使用
します。
また、これはリストの先頭から順に適用されていきます。

Example: >
	" "match" でどのウィンドウに対する設定かを指定し、
	" "set" でその値を設定する
	let g:automatic_config = [
	\	{
	\		"match" : {
	\			"buftype" : "help",
	\		},
	\		"set" : {
	\			"height" : 10,
	\			"move" : "bottom",
	\		},
	\	},
	\	{
	\		"match" : {
	\			"bufname" : '\[quickrun output\]',
	\		},
	\		"set" : {
	\			"height" : 5,
	\		}
	\	},
	\]
<

------------------------------------------------------------------------------
マッチ						*automatic-config-match*

"match" にはどの条件でマッチングを行うのかを設定します。
"match" には以下の値を設定することができます。
複数の条件が設定されている場合は、すべての条件にマッチした時に設定が実行されま
す。
い。

キー名		型		説明~
filetype	(文字列)	|'filetype'| の値と比較
buftype		(文字列)	|'buftype'| の値と比較
bufname		(文字列)	|bufname()| の値と比較
autocmds	(リスト)	呼び出されたい |autocmd| のリスト
matchlist	(リスト)	使用する |automatic-matcher| のリスト


詳しくは |automatic-matcher| も参照してください。


------------------------------------------------------------------------------
セット						*automatic-config-set*

"set" には条件に一致した場合の設定方法を記述します。
"set" には以下の値を設定することができます。

キー名			型		説明~
height			(数値)		ウィンドウの高さ（行数）
width 			(数値)		ウィンドの幅（桁数）
move			(文字列)	ウィンドウの位置
setlist			(リスト)	使用する |automatic-setter| のリスト
is_close_focus_out	(0 or 1)	別のウィンドウへ移動したら閉じる
unsetting		(0 or 1)	マッチしたいずれかの "set" でこの
					値に1 が設定してある場合、すべての
					"set" が処理されない


また、適用される順番は順不同です。
明示的に適用される順番を指定したい場合は "setlist" を使用してください。

詳しくは |automatic-setter| も参照してください。


------------------------------------------------------------------------------
コンテキスト					*automatic-config-context*

処理が呼び出された時の情報を持つ辞書です。
|automatic-macher| や |automatic-setter| から参照されます。


キー名		型		値~
filetype	(文字列)	'filetype'
buftype		(文字列)	'buftype'
bufname		(文字列)	|bufname()|
autocmd		(文字列)	呼び出された |autocmd| の値
filename	(文字列)	ファイルのフルパス


=============================================================================
マッチ方法					*automatic-matcher*

"match" に設定されている値を参照してマッチングを行います。
デフォルトでは以下のマッチ方法が使用されます。

- "filetype"
  |'filetype'| の値と比較します。
  キー名	型		デフォルト値~
  filetype	(文字列)	""

- "buftype"
  |'buftype'| の値と比較します。
  キー名	型		デフォルト値~
  buftype	(文字列)	""

- "bufname"
  |bufname()| の値と比較します。
  キー名	型		デフォルト値~
  buftype	(文字列)	""

- "autocmd"
  どの |atuocmd| から呼び出されたのかを設定します。
  デフォルトでは |BufWinEnter| 時にマッチします。
  キー名	型~		デフォルト値~
  autocmds	(リスト)	["BufWinEnter"]

  この変数には以下の値が設定出来ます。

  "BufWinEnter" : |BufWinEnter|
  "WinEnter"    : |WinEnter|
  "WinLeave"    : |WinLeave|
  "FileType"    : |FileType|

Example: >
	" "BufWinEnter" と "WinEnter" 時にマッチする定義
	let s:match = {
	\	"match" : {
	\		"autocmds" : ["BufWinEnter", "WinEnter"]
	\	},
	\}
<<

- "apply"
  {config} と {context} を受け取る辞書関数 "apply" を呼び出します。
  {config} は現在の "match" の値が渡されます。
  {context} の値は |automatic-config-context| を参照してください。
  任意の判定を行いたい場合に使用します。
  キー名	型		デフォルト値~
  apply		(関数参照)	1 を返す関数
Example: >
	let s:match = {
	\	"match" : {},
	\}
	function! s:match.apply(config, context)
		" マッチすれば 1 を、そうでなければ 0 を返す
	endfunction
<

- "matchlist"
  どのマッチ方法を使用するのかを設定します。
  また、このリストに設定された順番でマッチが呼び出されます。
  キー名	型		デフォルト値~
  matchlist	(文字列)	すべての matcher
Example: >
	" "filetype" と "buftype" のみ使用される
	" "buftype" → "filetype" の順でチェックする
	" "autocmds" の設定は無視される
	let s:match = {
	\	"match" : {
	\		"filetype" : "help",
	\		"buftype"  : "help",
	\		"autocmds"  : ["BufWinEnter", "BufEnter"]
	\		"matchlist"  : ["buftype", "filetype"]
	\	},
	\}
<

=============================================================================
セット方法					*automatic-setter*

"set" に設定されている値を参照して設定を行います。
デフォルトでは以下のセット方法が使用されます。

- "resize"
  ウィンドウのサイズを設定します。
  キー名	型	説明~
  height	(数値)	ウィンドウの高さ（行数）
  width		(数値)	ウィンドウの幅（桁数）

- "move"
  ウィンドウの位置を設定します。
  キー名	型		説明~
  move		(文字列)	ウィンドウの位置
  move には 以下の文字列が設定出来ます。
  "top"    : 一番上の位置
  "bottom" : 一番下の位置
  "right"  : 一番右の位置
  "left"   : 一番左の位置

- "apply"
  {config} と {context} を受け取る辞書関数 "apply" を呼び出します。
  {config} は現在の "set" の値が渡されます。
  {context} の値は |automatic-config-context| を参照してください。
  任意の処理を行いたい場合に使用します。
  キー名	型		説明~
  apply		(関数参照)	{config} を受け取る辞書関数
Example: >
	let s:set = {
	\	"set" : {},
	\}
	function! s:set.apply(config)
		" 任意の処理
	endfunction

- "setlist"
  どのセット方法を使用するのかを設定します。
  また、このリストに設定された順番に設定が適用されます。
  キー名	型		説明~
  setlist	(リスト)	setter の名前のリスト
Example: >
	" ウィンドウと移動させた後にウィンドウのサイズを設定する
	let set = {
	\	"set" : {
	\		"height" : 20,
	\		"move" : "top",
	\		"setlist" : ["move", "resize"]
	\	},
	\}

<- "close_window"
  ウィンドウを閉じる処理を行います。
  キー名		型		説明~
  is_close_focus_out	(0 or 1)	1 が設定されていればその
  					ウィンドウから別のウィン
					ドウへと移動した際に元の
					ウィンドウを閉じます。

- "command"
  コマンドの呼び出しを行います。
  キー名	型		説明~
  commands	(リスト)	呼び出して欲しいコマンドを設定し
  				ます。リストの先頭から順番にコマ
				ンドを呼び出します。



=============================================================================
設定例					*automatic-example*

:help 時のヘルプウィンドウの位置とサイズを設定する
>
	" ヘルプウィンドウを一番上へ移動し、高さを 20 にする
	let g:automatic_config = [
	\	{
	\		"match" : {
	\			"buftype" : "help",
	\		},
	\		"set" : {
	\			"height" : 20,
	\			"move" : "top",
	\		},
	\	},
	\]
<


unite.vim のウィンドウから移動した場合、unite.vim のウィンドウを閉じる
>
	let g:automatic_config = [
	\	{
	\		"match" : {
	\			"filetype" : "unite",
	\		},
	\		"set" : {
	\			"is_close_focus_out" : 1,
	\		},
	\	},
	\]
<

ウィンドウの適用順を明示的に設定する
>
	" resize を行なってから move を行う
	let g:automatic_config = [
	\	{
	\		"match" : {
	\			"buftype" : "help",
	\		},
	\		"set" : {
	\			"height" : 20,
	\			"move" : "bottom",
	\			"setlist" : ["resize", "move"]
	\		},
	\	},
	\]
<

すべての |BufWinEnter| 時に値をセットする
>
	" すべての match にマッチする
	let g:automatic_config = [
	\	{
	\		"match" : {
	\		},
	\		"set" : {
	\			"height" : 20
	\		},
	\	},
	\]
<

'buftype' が "help" 以外の場合に値をセットする
>
	" unsetting : 1 を設定することで
	" それにマッチした場合はセットが行われない
	let g:automatic_config = [
	\	{
	\		"match" : {
	\		},
	\		"set" : {
	\			"height" : 20
	\		},
	\	},
	\	{
	\		"match" : {
	\			"buftype" : "help"
	\		},
	\		"set" : {
	\			"unsetting" : 1
	\		},
	\	},
	\]
<


"set" のデフォルト値を設定する
>
	" マッチした場合にウィンドウの高さを 40 にする
	" g:automatic_config に設定されている値が優先されます
	let g:automatic_default_set_config = { "height" : 40 }
	
	let g:automatic_config = [
	\	{
	\		"match" : {
	\			"buftype" : 'help',
	\		},
	\	},
	\	{
	\		"match" : {
	\			"bufname" : '\[unite\]',
	\		},
	\	},
	\		"match" : {
	\			"bufname" : '\[quickrun output\]',
	\		},
	\		"set" : {
	\			"height" : 20
	\		},
	\]
<


==============================================================================
vim:tw=78:fo=tcq2mM:ts=8:ft=help:norl
